{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red15\green76\blue146;
\red36\green39\blue42;\red128\green19\blue25;}
{\*\expandedcolortbl;;\cssrgb\c0\c1\c1;\cssrgb\c100000\c100000\c100000\c0;\cssrgb\c4777\c37860\c64148;
\cssrgb\c18526\c20102\c21602;\cssrgb\c58000\c12793\c12576;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
for\cf2  (p=\cf2 0\cf2 , q=\cf2 0\cf2 ; q < NR_SCHED_QUEUES/\cf2 2\cf2 ; q++)\
    p += rdy_tail[q] - rdy_head[q];\
\cf2 if\cf2  (p<3) q= NR_SCHED_QUEUES / \cf2 2\cf2 ; \cf2 else\cf2  q= \cf2 0\cf2 ;\
\
\cf2 for\cf2  (; q < NR_SCHED_QUEUES; q++) \{    \
    \cf2 if\cf2 (!(rp = rdy_head[q])) \{\
        TRACE(VF_PICKPROC, printf(\cf2 "queue %d empty\\n"\cf2 , q););\
        \cf2 continue\cf2 ;\
    \}\
\
    TRACE(VF_PICKPROC, printf(\cf2 "found %s / %d on queue %d\\n"\cf2 , \
          rp->p_name, rp->p_endpoint, q););\
    assert(proc_is_runnable(rp));\
    \cf2 if\cf2  (priv(rp)->s_flags & BILLABLE)         \
        bill_ptr = rp;\
    \cf2 return\cf2  rp;\
\} \
\cf2 return\cf2  NULL;\
\
I edited the pick_proc function of the code. The main change I made was making the queue NR_SCHED_QUEUES/2 so it would choose lower priority tasks with more probability and slow down the startup of MINIX.}