{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Part 1: Executing threadHello creates 20 threads each with a different id and joins them to the main process. They all finish executing and then the main thread finishes and prints Main Thread Done. If we run this multiple times the amount of threads stay static but the IDs change. I saw that when I ran the program while streaming YouTube it was a bit slower and some threads returned their outputs before some were initialized. The void *arg that is passed is per thread as that value is used when executing the function/process that individual thread becomes. It is stored in the thread\'92s local stack. The variable i that is passed is a single value that is allocated once at a single memory space. However since i is incremented the value changes and it uses that value to access IDs to return so it shows the correct corresponding value.\
\
Part 2: The program still runs the same but the threads are not joined to the main thread so the main thread finishes before some of the other threads are finished executing}