{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Part 1: It starts to run threads but each thread only runs when it enters the critical section. When it enters the critical section it starts to execute and is returned when finished. This is different from threadHello.c as the threads in threadHello.c do not need to wait to enter the critical section to start executing while the threads in threadSync.C have to wait. This execution during critical section only is for synchronization and to avoid race conditions.\
\
Part 2: The code is implemented so it forever loops until Ctrl^C is entered}